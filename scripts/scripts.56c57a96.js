(function(){"use strict";angular.module("lifeApp",[])}).call(this),function(){"use strict";angular.module("lifeApp").controller("MainCtrl",["Life","Grid","Examples","$scope",function(a,b,c,d){var e,f,g,h,i;f=new b(40,40,50),g=new a(f),g.loadPattern(c.gosper),e={stop:function(){return d.timer?(clearInterval(d.timer),d.timer=null,!1):!0},start:function(){return d.timer=setInterval(function(){return g.stepForward(),d.$apply()},d.settings.delay)},startStop:function(){return d.stop()?(d.cellClickCheck(),d.start()):void 0},speedChange:function(){return d.timer?(d.stop(),d.start()):void 0},stepForward:function(){return d.stop(),d.cellClickCheck(),g.stepForward()},stepBack:function(){return d.stop(),d.cellClickCheck(),g.stepBack()},cellClickCheck:function(){return d.cellClicked?(d.cellClicked=!1,g.resetPreStep()):void 0},cellClick:function(a){return d.stop(),d.cellClicked=!0,a.invertState(),g.resetPreStep()},random:function(){return d.stop(),g.setRandom()},blank:function(){return d.stop(),g.setBlank()},gosper:function(){return d.stop(),g.loadPattern(c.gosper)},pulsar:function(){return d.stop(),g.loadPattern(c.pulsar)}},i={delay:1,cellSize:12,displayNeighbors:!1},h={grid:f,life:g},angular.extend(d,e,h,{settings:i})}])}.call(this),function(){"use strict";angular.module("lifeApp").factory("Cell",function(){var a,b;return b=function(a,b){return this.neighbors=b,this.alive=a,this},a=function(a,c,d){return this.display=new b(d,0),this.x=a,this.y=c,this.alive=d,this.neighbors=0,this.previous=[],this.following=[],this},a.Display=b,a.prototype={reset:function(a){return this.alive=!!a,this.previous=[],this.following=[],this.neighbors=0,this.display.alive=!!a,this.display.neighbors=0},resetPreStep:function(){return this.alive=this.display.alive,this.following=[]},stepBack:function(){return this.following.push(this.display),this.display=this.previous.pop()},stepForward:function(){return this.previous.push(this.display),this.display=this.following.pop()},invertState:function(){return this.display.alive=!this.display.alive},getNextState:function(){var a;return a=this.alive&&this.neighbors>1&&this.neighbors<4||!this.alive&&3===this.neighbors,this.display=new b(this.alive,this.neighbors),this.alive=a,this.neighbors=0},liveOrDie:function(){return this.previous.length>a.historyLimit&&this.previous.shift(),this.previous.push(this.display),this.getNextState()}},a})}.call(this),function(){"use strict";angular.module("lifeApp").factory("Examples",function(){var a;return a={gosper:[[26,3],[24,4],[26,4],[14,5],[15,5],[22,5],[23,5],[36,5],[37,5],[13,6],[17,6],[22,6],[23,6],[36,6],[37,6],[2,7],[3,7],[12,7],[18,7],[22,7],[23,7],[2,8],[3,8],[12,8],[16,8],[18,8],[19,8],[24,8],[26,8],[12,9],[18,9],[26,9],[13,10],[17,10],[14,11],[15,11]],pulsar:[[15,11],[16,11],[17,11],[21,11],[22,11],[23,11],[13,13],[18,13],[20,13],[25,13],[13,14],[18,14],[20,14],[25,14],[13,15],[18,15],[20,15],[25,15],[15,16],[16,16],[17,16],[21,16],[22,16],[23,16],[15,18],[16,18],[17,18],[21,18],[22,18],[23,18],[13,19],[18,19],[20,19],[25,19],[13,20],[18,20],[20,20],[25,20],[13,21],[18,21],[20,21],[25,21],[15,23],[16,23],[17,23],[21,23],[22,23],[23,23]]}})}.call(this),function(){"use strict";angular.module("lifeApp").factory("Grid",["Cell",function(a){var b;return b=function(a,b,c){var d;for(this.x=a,this.y=b,this.cells=new Array(b),this.sparseFactor=c,d=0;b>d;)this.cells[d]=this.createRow(d),d++;return this},b.prototype={createRow:function(b){var c,d;for(c=0,d=new Array(this.x);c<this.x;)d[c]=new a(c,b,!1),c++;return d},getCell:function(a,b){return this.cells[b][a]},setCell:function(a,b,c){return this.cells[b][a].alive=c},forEachCell:function(a,b){var c,d,e,f,g,h,i;for(b=b||[],i=this.cells,e=0,g=i.length;g>e;e++)for(d=i[e],f=0,h=d.length;h>f;f++)c=d[f],a.apply(c,b)},setBlankState:function(){return this.forEachCell(a.prototype.reset,[!1])},setRandomState:function(){var a,b,c,d,e,f,g,h,i;for(c=new Uint8Array(this.x*this.y),window.crypto.getRandomValues(c),b=0,i=this.cells,e=0,g=i.length;g>e;e++)for(d=i[e],f=0,h=d.length;h>f;f++)a=d[f],a.reset(c[b++]<this.sparseFactor)},addCol:function(){var b,c,d,e,f;for(this.x++,f=this.cells,c=d=0,e=f.length;e>d;c=++d)b=f[c],b.push(new a(this.x,c,!1))},delCol:function(){var a,b,c,d;for(this.x--,d=this.cells,b=0,c=d.length;c>b;b++)a=d[b],a.pop()},addRow:function(){return this.y++,this.cells.push(this.createRow(this.y))},delRow:function(){return this.y--,this.cells.pop()},fromJson:function(a){var b,c,d;for(this.setBlankState(),c=0,d=a.length;d>c;c++)b=a[c],this.getCell(b[0],b[1]).alive=!0},toJson:function(){return this.cells.reduce(function(a,b){return b.reduce(function(a,b){return b.display.alive&&a.push([b.x,b.y]),a},a)},[])}},b}])}.call(this),function(){"use strict";angular.module("lifeApp").factory("Life",["Cell",function(a){var b;return b=function(a){return this.grid=a,this.numTicks=0,this},b.historyLimit=100,a.historyLimit=b.historyLimit,b.prototype={historyStatus:function(){var a;return a=this.grid.getCell(0,0),{back:a.previous.length,forward:a.following.length}},stepBack:function(){return this.historyStatus().back?(this.grid.forEachCell(a.prototype.stepBack),this.numTicks--):void 0},resetPreStep:function(){return this.grid.forEachCell(a.prototype.resetPreStep),this.preStep()},preStep:function(){return this.step(a.prototype.getNextState)},stepForward:function(){return this.historyStatus().forward?this.grid.forEachCell(a.prototype.stepForward):this.step(a.prototype.liveOrDie),this.numTicks++},step:function(a){var b,c,d,e,f,g,h,i;return d=function(b,c){var d,e,f;return d=b.aboveRow.shift(),e=b.aboveLeft,f=b.left,b.aboveLeft=d,b.left=c,e.neighbors+=c.alive+d.alive+f.alive,f.neighbors+=e.alive+d.alive,d.neighbors+=f.alive+e.alive,c.neighbors+=e.alive,a.call(e),b},c=function(b,c){var e,f,g,h;return h=c.slice(),g=b.slice(),f={aboveLeft:g.shift(),aboveRow:g,left:h.shift()},e=h.reduce(d,f),e.aboveLeft.neighbors+=e.left.alive,e.left.neighbors+=e.aboveLeft.alive,a.call(e.aboveLeft),c},b=this.grid.cells.slice(),f=b.shift(),i=b.reduce(c,f),h=i.slice(),e=h.shift(),g=h.reduce(function(b,c){return c.neighbors+=b.alive,b.neighbors+=c.alive,a.call(b),c},e),a.call(g)},setPattern:function(a){return this.numTicks=0,a(),this.preStep()},setRandom:function(){return this.setPattern(this.grid.setRandomState.bind(this.grid))},setBlank:function(){return this.setPattern(this.grid.setBlankState.bind(this.grid))},loadPattern:function(a){return this.setPattern(this.grid.fromJson.bind(this.grid,a))}},b}])}.call(this),angular.module("lifeApp").run(["$templateCache",function(a){"use strict";a.put("views/main.html",'<div id="grid" class="wide-column"> <style>div.cell {\n			display: inline-block;\n			width: {{settings.cellSize}}px;\n			height: {{settings.cellSize}}px;\n			font-size: {{settings.cellSize*0.6}}pt;\n		}\n		div.grid-row {\n			height: {{settings.cellSize}}px;\n		}</style> <div class="grid-row" ng-repeat="row in grid.cells"> <div class="cell" ng-repeat="cell in row" ng-class="cell.display.alive ? &quot;alive&quot; : &quot;dead&quot;" ng-click="cellClick(cell)">{{settings.displayNeighbors ? cell.display.neighbors : ""}} </div> </div> </div> <div id="controls" class="narrow-column"> <p class="hint">Click a cell to toggle its state at any time</p> <div class="row form-group"> <h3>Pattern</h3> <button ng-click="random()">random</button> <button ng-click="blank()">blank</button> <button ng-click="gosper()">Gosper</button> <button ng-click="pulsar()">Pulsar</button> </div> <div class="row form-group"> <h3>Evolution</h3> <p class="info">tick #{{life.numTicks}}</p> <button ng-click="stepBack()"> &lt; <span class="info">{{life.historyStatus().back}} </span> </button> <button ng-click="startStop()">{{timer ? "&#9647;" : "&#9655;" }}</button> <button ng-click="stepForward()"> &gt; </button> </div> <div class="row form-group"> <h3>Speed</h3> <input type="number" ng-change="speedChange()" ng-model="settings.delay" required>delay (msec) </div> <div class="row form-group"> <h3>Size</h3> <p> <button ng-click="grid.delRow()">-</button> {{life.grid.y}} Rows <button ng-click="grid.addRow()">+</button> </p> <p> <button ng-click="grid.delCol()">-</button> {{life.grid.x}} Columns <button ng-click="grid.addCol()">+</button> </p> <p> Cell size <input type="number" ng-model="settings.cellSize" min="5" max="50" required>px </p> </div> <div class="row form-group"> <input type="checkbox" ng-model="settings.displayNeighbors"> Display number of neighbours </div> </div>')}]);